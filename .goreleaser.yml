# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
version: 2

builds:
  - main: ./cmd/educatesenv
    id: educatesenv
    binary: educatesenv-{{ .Os }}-{{ .Arch }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -X github.com/educates/educatesenv/pkg/version.Version={{ .Version }}

archives:
  - formats:
      - binary

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256
  disable: false

# Documentation: https://goreleaser.com/customization/release/#github
release:
  # Repo in which the release will be created.
  github:
    owner: educates
    name: educatesenv

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default: false.
  prerelease: auto

  # If set to true, will not auto-publish the release.
  draft: false

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default: `keep-existing`.
  mode: replace


  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  disable: false

  header: |
    <details>

    <summary><h2>Installation</h2></summary>

    ### Installation
    
    #### By downloading binary from the release

    For instance, if you are using Linux on an AMD64 architecture:
    ```shell
    # Download the binary
    curl -LO https://github.com/{{ .Env.GITHUB_REPOSITORY }}/releases/download/{{ .Tag }}/{{ .ProjectName }}-linux-amd64

    # Move the binary in to your PATH
    mv educatesenv-linux-amd64 /usr/local/bin/educatesenv

    # Make the binary executable
    chmod +x /usr/local/bin/educatesenv
    ```
    </details>

  footer: |
      ## Thanks

      And if you like this project, please give it a star or think about donating!

changelog:
  # Sorts the changelog by the commit's messages.
  sort: asc

  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    exclude:
      - "^docs:"
      - "^test:"
      - "^typo:"

notarize:
  macos:
    - # Whether this configuration is enabled or not.
      #
      # Default: false.
      # Templates: allowed.
      enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'

      # Before notarizing, we need to sign the binary.
      # This block defines the configuration for doing so.
      sign:
        # The .p12 certificate file path or its base64'd contents.
        #
        # Templates: allowed.
        certificate: "{{.Env.MACOS_SIGN_P12}}"

        # The password to be used to open the certificate.
        #
        # Templates: allowed.
        password: "{{.Env.MACOS_SIGN_PASSWORD}}"

        # Allows to set the signature entitlements XML file.
        #
        # Templates: allowed.
        # Since: v2.6.
        entitlements: ./entitlements.xml

      # Then, we notarize the binaries.
      #
      # You can leave this section empty if you only want
      # to sign the binaries (Since: v2.1).
      notarize:
        # The issuer ID.
        # Its the UUID you see when creating the App Store Connect key.
        #
        # Templates: allowed.
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"

        # Key ID.
        # You can see it in the list of App Store Connect Keys.
        # It will also be in the ApiKey filename.
        #
        # Templates: allowed.
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"

        # The .p8 key file path or its base64'd contents.
        #
        # Templates: allowed.
        key: "{{.Env.MACOS_NOTARY_KEY}}"

        # Whether to wait for the notarization to finish.
        # Not recommended, as it could take a really long time.
        wait: false

        # Timeout for the notarization.
        # Beware of the overall `--timeout` time.
        # This only has any effect if `wait` is true.
        #
        # Default: 10m.
        timeout: 20m